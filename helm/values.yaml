# KubeWizard Helm Chart 預設值

# 副本數
replicaCount: 1

# 映像配置
image:
  repository: kubewizard
  pullPolicy: IfNotPresent
  # 覆寫映像標籤（預設使用 Chart 的 appVersion）
  tag: ""

# 映像拉取密鑰
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# ServiceAccount 配置
serviceAccount:
  # 是否創建 ServiceAccount
  create: true
  # ServiceAccount 的註解
  annotations: {}
  # ServiceAccount 的名稱（如果不設定則自動產生）
  name: ""

# RBAC 配置
rbac:
  # 是否創建 RBAC 資源（ClusterRole 和 ClusterRoleBinding）
  create: true
  # ClusterRole 規則（給予 Pod 存取 K8s API 的權限）
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "endpoints", "namespaces", "nodes", "events", "configmaps", "secrets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["batch"]
      resources: ["jobs", "cronjobs"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses", "networkpolicies"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: [""]
      resources: ["persistentvolumes", "persistentvolumeclaims"]
      verbs: ["get", "list", "watch"]

# Pod 註解
podAnnotations: {}

# Pod 安全上下文
podSecurityContext: {}
  # fsGroup: 2000

# 容器安全上下文
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service 配置
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  # NodePort（僅當 type 為 NodePort 時使用）
  # nodePort: 30080

# Ingress 配置
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: kubewizard.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: kubewizard-tls
  #    hosts:
  #      - kubewizard.example.com

# 資源限制
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# 自動擴展配置
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Node 選擇器
nodeSelector: {}

# 容忍度
tolerations: []

# 親和性
affinity: {}

# 健康檢查
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Redis 配置
redis:
  # 是否啟用內建的 Redis
  enabled: true
  # 如果使用外部 Redis，設定連接 URL
  # externalUrl: "redis://external-redis:6379/0"
  
  # 內建 Redis 配置
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  persistence:
    enabled: false
    # storageClass: ""
    size: 1Gi

# 環境變數配置
env:
  # AI 配置（必填）
  AI_MODEL: "gemini-2.0-flash-exp"
  AI_TEMPERATURE: "0.7"
  
  # Kubernetes 配置
  DEBUG_LEVEL: "1"
  
  # 應用配置
  LOG_LEVEL: "INFO"
  
  # 算命工具配置（預設關閉）
  ENABLE_FORTUNE_TOOLS: "false"

# 密鑰配置（建議使用 Kubernetes Secret）
secrets:
  # Google Gemini API Key（必填）
  AI_GOOGLE_API_KEY: "AIzaSyCqAFxo3_DMoFQ5aqPmfGudBT0uVVXdiFo"
  
  # 算命工具 API Keys（可選）
  YUANFENJU_API_KEY: ""
  SERPAPI_API_KEY: ""
  
  # LINE Bot 配置（可選）
  # Channel ID: 2008339884
  LINE_CHANNEL_SECRET: "9138ba7409b9d688b581761f86798106"
  LINE_CHANNEL_ACCESS_TOKEN: "nInbb5/OP8OnghZ9kNOnkgMChAUEKTx9rsgranMb8wSz3OoeWPRfuVRoVjniikEr9QxTa8OHeQR0wN5FyUhHkckuf+qaS5Mpk1Gsc62MRZi13YjET/RMOEwYsUt6jcyyuUjI3FThvklRCnecuNClxAdB04t89/1O/w1cDnyilFU="

# 現有的 Secret 名稱（如果已經有創建好的 Secret）
existingSecret: ""
